name: CI/CD to EC2

on:
  push:
    branches: [main]

env:
  DOCKER_BUILDKIT: 1

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up SSH
        run: |
          SSH_DIR="$HOME/.ssh"
          mkdir -p "$SSH_DIR"
          echo "${{ secrets.EC2_SSH_KEY }}" > "$SSH_DIR/id_rsa"
          chmod 600 "$SSH_DIR/id_rsa"
          
         
          ssh-keyscan -p ${{ secrets.EC2_PORT }} "${{ secrets.EC2_HOST }}" >> "$SSH_DIR/known_hosts"

      - name: Test SSH connection
        run: |
          ssh -i "$HOME/.ssh/id_rsa" \
          -o StrictHostKeyChecking=no \
          -p ${{ secrets.EC2_PORT }} \
          ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "echo 'SSH connection successful!'"

      - name: Verify SSH setup
        run: |
          ls -la ~/.ssh
          cat ~/.ssh/known_hosts

      - name: Deploy to EC2
        run: |
          ssh -i "$HOME/.ssh/id_rsa" \
            -o StrictHostKeyChecking=no \
            -o UserKnownHostsFile="$HOME/.ssh/known_hosts" \
            -p ${{ secrets.EC2_PORT }} \
            ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -e
            echo "📦 Updating packages and installing dependencies..."
            sudo yum update -y
            sudo yum install -y git docker
            sudo systemctl start docker
            sudo systemctl enable docker
            
            # Install Docker Compose if not exists
            if [ ! -f /usr/local/bin/docker-compose ]; then
              sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" \
                -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi

            echo "🔁 Setting up or updating repository..."
            if [ ! -d ~/Exam ]; then
              git clone https://github.com/Erikas349/Exam.git ~/Exam
            fi
            cd ~/Exam/To-Do-app
            git config --global --add safe.directory ~/Exam/To-Do-app

            rm -f backend/todo.db

            git pull origin main

            echo "🔄 Rebuilding Docker containers..."
            docker-compose down --remove-orphans || true
            docker-compose up --build -d

            echo "🧹 Cleaning up unused Docker resources..."
            docker system prune -af --volumes || true
            echo "✅ Deployment completed successfully!"
          EOF
name: CI/CD to EC2

on:
  push:
    branches: [main]

env:
  DOCKER_BUILDKIT: 1

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up SSH
      run: |
        SSH_DIR="$HOME/.ssh"
        mkdir -p "$SSH_DIR"
        echo "${{ secrets.EC2_SSH_KEY }}" > "$SSH_DIR/id_rsa"
        chmod 600 "$SSH_DIR/id_rsa"
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> "$SSH_DIR/known_hosts"

    - name: Deploy to EC2
      run: |
        ssh -i "$HOME/.ssh/id_rsa" \
          -o StrictHostKeyChecking=no \
          -o UserKnownHostsFile="$HOME/.ssh/known_hosts" \
          -p ${{ secrets.EC2_PORT }} \
          ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          set -e
          echo "🔁 Pulling latest code..."
          cd ~/Erikas349/Exam/To-Do-app || git clone https://github.com/Erikas349/Exam.git ~/Erikas349/Exam && cd ~/Erikas349/Exam/To-Do-app
          git pull origin main

          echo "🔄 Rebuilding Docker containers..."
          docker compose down --remove-orphans
          docker compose up --build -d

          echo "🧹 Cleaning up..."
          docker system prune -af --volumes

          echo "✅ Deployment done!"
        EOF

    - name: Health Check - Backend
      run: |
        for i in {1..5}; do
          if curl -fs "http://${{ secrets.EC2_HOST }}:5000/todos"; then
            echo "✅ Backend healthy!"
            exit 0
          fi
          echo "⏳ Waiting for backend... ($i)"
          sleep 10
        done
        echo "❌ Backend failed health check."
        exit 1

    - name: Health Check - Frontend
      run: |
        for i in {1..5}; do
          if curl -fs "http://${{ secrets.EC2_HOST }}:3000"; then
            echo "✅ Frontend healthy!"
            exit 0
          fi
          echo "⏳ Waiting for frontend... ($i)"
          sleep 10
        done
        echo "❌ Frontend failed health check."
        exit 1
